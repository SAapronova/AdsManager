#Spring app
spring.application.name=dcvm-process-manager
spring.main.banner-mode=off
spring.output.ansi.enabled=ALWAYS
spring.task.scheduling.pool.size=5
spring.data.jpa.repositories.bootstrap-mode=default
spring.jackson.mapper.ACCEPT_CASE_INSENSITIVE_ENUMS=true 
#swagger
springdoc.api-docs.enabled=true
springdoc.show-login-endpoint=true
springdoc.swagger-ui.doc-expansion= none
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.tagsSorter=alpha

logging.level.web=INFO
logging.level.org.hibernate.SQL=TRACE
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.hibernate.engine.internal.StatisticalLoggingSessionEventListener=OFF

logging.level.org.apache.http=DEBUG
logging.level.httpclient.wire=DEBUG

logging.level.com.x5.bigdata.dvcm.campaigner.service.jira=DEBUG
logging.level.org.springframework.web.client.*=DEBUG

#Pgsql
spring.datasource.url=jdbc:postgresql://localhost:5432/dcvm_process
spring.datasource.username=dcvm
spring.datasource.password=dcvm
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.maximum-pool-size=5

#spring.jpa.hibernate.ddl-auto=validate

### JWT ###
security.jwt.secret=6cd76c92-d489-11e9-a8ce-6fc979c7a4c1
######

#JPA
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.generate_statistics=true

#Flyway
spring.flyway.url=${spring.datasource.url}
spring.flyway.user=${spring.datasource.username}
spring.flyway.password=${spring.datasource.password}
spring.flyway.schemas=public
spring.flyway.locations=classpath:/db/migration/base,classpath:/db/migration/dev
spring.flyway.baselineOnMigrate=true

#Kafka настройки клиента
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=${spring.application.name}-dev
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.listener.ack-mode=manual
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=0
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5
spring.kafka.producer.enable.idempotence=true
spring.kafka.listener.missing-topics-fatal=false

#Kafka настройки приложения
kafka.enable=false
kafka.producer.send.timeout.sec=5
kafka.topic.calculation.result=model-gp-result
kafka.topic.analysis.result=analysis-result
kafka.topic.filtration.result=filter-result
kafka.topic.split.result=split-result
kafka.topic.communication.result=communication-result
kafka.topic.integration.result=integration-result
kafka.topic.split.tasks=split-task
kafka.topic.communication.tasks=communication-task
kafka.topic.upload.s3.task=communication-task
kafka.topic.upload.s3.result=upload-s3-result
kafka.topic.cleanup.tasks=cleanup-task
kafka.topic.cleanup.result=cleanup-result
kafka.topic.notification=notification
kafka.topic.jira.operation=jira-operation

spring.kafka.consumer.properties.auto.offset.reset=earliest

#metrics
management.health.mail.enabled=false
management.health.ldap.enabled=false
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=prometheus,health
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

#Camunda
camunda.bpm.admin-user.id=admin
camunda.bpm.admin-user.firstName=Admin
camunda.bpm.filter.create=All tasks

API=http://localhost:3000